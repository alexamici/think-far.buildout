[buildout]
extensions = mr.developer
sources = sources
auto-checkout = thinkfar
download-cache = ../tmp/download-cache
develop = .
parts =
    demo
    patches
    extjs
    nosetests
unzip = true

[sources]
thinkfar = git https://alexamici@github.com/alexamici/thinkfar.git

[demo]
recipe = rod.recipe.appengine
zip-packages = False
exclude = tests
packages =
    thinkfar
    repoze.bfg
    repoze.lru
    venusian
    translationstring
    zope.configuration
    zope.schema
    zope.deprecation
    zope.i18nmessageid
    simplejson
    paste
    beaker
    chameleon
    zope.component
    zope.event
    zope.interface
url = http://googleappengine.googlecode.com/files/google_appengine_1.3.7.zip

# taken from http://code.google.com/p/bfg-gae-buildout/
[patches]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    ###
    # rod.recipe.appengine inserts dummy pkg_resources into 
    # parts/wrapper/pkg_resources, but it seems that bfg.repoze
    # requires a real one to work
    wget http://svn.python.org/projects/sandbox/trunk/setuptools/pkg_resources.py -O ${buildout:parts-directory}/demo/pkg_resources.py
    ### 
    # Apperently there are still some incompatibilities between
    # pkg_resources and googleappengine and those can be avoided
    # by using appengine_monkey 
    # http://code.google.com/p/googleappengine/issues/detail?id=60
    wget http://appengine-monkey.googlecode.com/svn/trunk/appengine_monkey.py -O ${buildout:parts-directory}/demo/appengine_monkey.py

[extjs]
recipe = hexagonit.recipe.download
url = http://downloads.sencha.com/extjs/ext-3.3.0.zip
strip-top-level-dir = true

[nosetests]
recipe = zc.recipe.egg
eggs =
    ${demo:packages}
    NoseGAE
    WebTest
    coverage
    nose
extra-paths =
    ${buildout:directory}/parts/google_appengine
    ${buildout:directory}/parts/google_appengine/lib/antlr3
    ${buildout:directory}/parts/google_appengine/lib/django
    ${buildout:directory}/parts/google_appengine/lib/webob
    ${buildout:directory}/parts/google_appengine/lib/yaml/lib
interpreter = python

[docs]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
interpreter = ${buildout:directory}/bin/python

